<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>luthree&#39;s Blog</title>
  
  <subtitle> </subtitle>
  <link href="https://blog.luthr.ee/atom.xml" rel="self"/>
  
  <link href="https://blog.luthr.ee/"/>
  <updated>2025-05-24T14:12:51.456Z</updated>
  <id>https://blog.luthr.ee/</id>
  
  <author>
    <name>luthree</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Python的图形化点名系统</title>
    <link href="https://blog.luthr.ee/posts/A-name-picker-based-on-Python/"/>
    <id>https://blog.luthr.ee/posts/A-name-picker-based-on-Python/</id>
    <published>2025-05-24T07:39:36.000Z</published>
    <updated>2025-05-24T14:12:51.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="要实现的功能"><a href="#要实现的功能" class="headerlink" title="要实现的功能"></a>要实现的功能</h1><ul><li>随机点名</li><li>在一定数量范围内不会重复点到同一个人</li><li>便于操作的图形化界面<span id="more"></span></li><li><span class="blur">修改指定名字被点到的概率</span></li></ul><h1 id="功能的实现"><a href="#功能的实现" class="headerlink" title="功能的实现"></a>功能的实现</h1><h2 id="库的导入"><a href="#库的导入" class="headerlink" title="库的导入"></a>库的导入</h2><p>使用<code>tkinter</code>和<code>random</code>库可以帮助我们实现图形化界面和随机点名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure><h2 id="搭建图形界面"><a href="#搭建图形界面" class="headerlink" title="搭建图形界面"></a>搭建图形界面</h2><p>用以下的代码可以搭建一个简单的点名页面：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, master</span>):</span><br><span class="line">    self.master = master</span><br><span class="line">    </span><br><span class="line">    master.title(<span class="string">&quot;点名器&quot;</span>)</span><br><span class="line"></span><br><span class="line">    self.label = tk.Label(master, text=<span class="string">&quot;     点名结果:      &quot;</span>, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">30</span>))</span><br><span class="line">    self.label.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    self.result = tk.Label(master, text=<span class="string">&quot;&quot;</span>, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">34</span>), fg=<span class="string">&quot;red&quot;</span>)</span><br><span class="line">    self.result.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    self.pick_button = tk.Button(master, text=<span class="string">&quot;开始点名&quot;</span>, command=self.toggle_picking, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">28</span>))</span><br><span class="line">    self.pick_button.pack(pady=<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>self.result</code>为显示点名结果的标签。</li><li><code>self.pick_button</code>为开始&#x2F;结束按钮。</li></ul><h2 id="获取名单"><a href="#获取名单" class="headerlink" title="获取名单"></a>获取名单</h2><p>为实现随机点名，我们必须要做的是获取所有人的姓名，其可以用以下代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;names.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> tf:</span><br><span class="line">        self.names = tf.read().split(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>文件<code>names.txt</code>是储存名单的文件。</li><li>列表<code>self.names</code>用于在程序中储存名单。</li><li>函数<code>tf.read().split(&quot;\n&quot;)</code>用于按照换行分割名字</li></ul><p>引号中的文件名在没有路径修饰的情况下会默认读取与程序同目录下的文件。我们也可以将其改成绝对路径：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;C://names.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> tf:</span><br></pre></td></tr></table></figure><h2 id="随机点名"><a href="#随机点名" class="headerlink" title="随机点名"></a>随机点名</h2><p>要实现随机点名，我们需要调用<code>random</code>下的<code>choice</code>来在列表中选择：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">choose_name</span>(<span class="params">self</span>):</span><br><span class="line">    final_name = random.choice(names)</span><br><span class="line">    <span class="keyword">return</span> final_name</span><br></pre></td></tr></table></figure><h2 id="排除点过的名字"><a href="#排除点过的名字" class="headerlink" title="排除点过的名字"></a>排除点过的名字</h2><p>我们不会希望一个人因为运气好而被连续点到，因此需要在点到一个人后将他的名字排除在外。</p><p>我们先定义一个列表用于储存已经点过的名字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.named = []</span><br></pre></td></tr></table></figure><p>然后将列表中的名字排除：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">choose_name</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># 过滤出有效的名字列表，排除已经点过的名字</span></span><br><span class="line">    available_names = [name <span class="keyword">for</span> name <span class="keyword">in</span> self.names <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.named]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果没有可选名字，则直接返回 &quot;无可选名字&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> available_names:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;无可选名字，请重启应用后重试&quot;</span></span><br></pre></td></tr></table></figure><h2 id="将点名结果显示在屏幕上"><a href="#将点名结果显示在屏幕上" class="headerlink" title="将点名结果显示在屏幕上"></a>将点名结果显示在屏幕上</h2><p>将点名结果<code>final_name</code>显示在结果标签中，然后将其记录在<code>self.named</code>中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pick_final_name</span>(<span class="params">self</span>):</span><br><span class="line">    self.count += <span class="number">1</span>  <span class="comment"># 点名次数增加</span></span><br><span class="line"></span><br><span class="line">    final_name = self.choose_name()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示最终点名结果</span></span><br><span class="line">    self.result.config(text=final_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果记录的名字超过20次，移除最早的名字</span></span><br><span class="line">    <span class="keyword">if</span> self.count &gt;= <span class="number">20</span>:</span><br><span class="line">        self.named.pop(<span class="number">0</span>)</span><br><span class="line">    self.named.append(final_name)</span><br></pre></td></tr></table></figure><h2 id="点名时实现滚动动画"><a href="#点名时实现滚动动画" class="headerlink" title="点名时实现滚动动画"></a>点名时实现滚动动画</h2><p>为营造点名的紧张感，我们可以用以下代码来实现名字在屏幕上滚动的效果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">roll_names</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">if</span> self.is_picking:</span><br><span class="line">        name = random.choice(self.names)</span><br><span class="line">        self.result.config(text=name)</span><br><span class="line">        self.master.after(<span class="number">25</span>, self.roll_names)</span><br></pre></td></tr></table></figure><p>其中：<code>self.is_picking</code>记录了点名器的状态，其可以用先前定义的按钮来控制：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">toggle_picking</span>(<span class="params">self</span>):</span><br><span class="line">    self.is_picking = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.is_picking:</span><br><span class="line">        self.is_picking = <span class="literal">True</span></span><br><span class="line">        self.pick_button.config(text=<span class="string">&quot;停止点名&quot;</span>)</span><br><span class="line">        self.roll_names()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.is_picking = <span class="literal">False</span></span><br><span class="line">        self.pick_button.config(text=<span class="string">&quot;开始点名&quot;</span>)</span><br><span class="line">        self.pick_final_name()</span><br></pre></td></tr></table></figure><h2 id="实现隐藏功能"><a href="#实现隐藏功能" class="headerlink" title="实现隐藏功能"></a>实现隐藏功能</h2><div class="collapse-box-control">    <div class="collapse-box-header"><div class="collapse-box-icon"><i class="fa fa-plus"></i></div><span>隐藏的内容</span></div>    <div class="collapse-box-content"><div class="inner">        <p>在此基础上我们可以实现修改指定名字被点到的概率。首先定义一个列表用于储存特殊的名字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.skip_names = [<span class="string">&quot;张三&quot;</span>]</span><br></pre></td></tr></table></figure><p>然后修改他被点到的概率：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> self.skip_names <span class="keyword">in</span> available_names <span class="keyword">and</span> random.random() &lt; <span class="number">0.5</span>:</span><br><span class="line">    available_names.remove(self.skip_names)</span><br></pre></td></tr></table></figure><p>其中：<code>random.random() &lt; 0.5</code>代表其被点到后有50%的概率被跳过。</p>     </div></div>    </div><h1 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NamePicker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, master</span>):</span><br><span class="line">        self.master = master</span><br><span class="line"></span><br><span class="line">        self.count = <span class="number">0</span>  <span class="comment"># 初始化计数器</span></span><br><span class="line">        </span><br><span class="line">        master.title(<span class="string">&quot;点名器&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.label = tk.Label(master, text=<span class="string">&quot;     点名结果:      &quot;</span>, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">30</span>))</span><br><span class="line">        self.label.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.result = tk.Label(master, text=<span class="string">&quot;&quot;</span>, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">34</span>), fg=<span class="string">&quot;red&quot;</span>)</span><br><span class="line">        self.result.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.pick_button = tk.Button(master, text=<span class="string">&quot;开始点名&quot;</span>, command=self.toggle_picking, font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">28</span>))</span><br><span class="line">        self.pick_button.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 读取名字列表</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;names.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> tf:</span><br><span class="line">            self.names = tf.read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 跳过的名字列表</span></span><br><span class="line">        self.skip_names = [<span class="string">&quot;张三&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 记录已经点过名的名单</span></span><br><span class="line">        self.named = []</span><br><span class="line"></span><br><span class="line">        self.is_picking = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">toggle_picking</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.is_picking:</span><br><span class="line">            self.is_picking = <span class="literal">True</span></span><br><span class="line">            self.pick_button.config(text=<span class="string">&quot;停止点名&quot;</span>)</span><br><span class="line">            self.roll_names()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.is_picking = <span class="literal">False</span></span><br><span class="line">            self.pick_button.config(text=<span class="string">&quot;开始点名&quot;</span>)</span><br><span class="line">            self.pick_final_name()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">roll_names</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.is_picking:</span><br><span class="line">            name = random.choice(self.names)</span><br><span class="line">            self.result.config(text=name)</span><br><span class="line">            self.master.after(<span class="number">25</span>, self.roll_names)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pick_final_name</span>(<span class="params">self</span>):</span><br><span class="line">        self.count += <span class="number">1</span>  <span class="comment"># 点名次数增加</span></span><br><span class="line"></span><br><span class="line">        final_name = self.choose_name()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示最终点名结果</span></span><br><span class="line">        self.result.config(text=final_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果记录的名字超过20次，移除最早的名字</span></span><br><span class="line">        <span class="keyword">if</span> self.count &gt;= <span class="number">20</span>:</span><br><span class="line">            self.named.pop(<span class="number">0</span>)</span><br><span class="line">        self.named.append(final_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">choose_name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 限制最大重试次数，防止死循环</span></span><br><span class="line">        max_attempts = <span class="number">100</span>  </span><br><span class="line">        attempts = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> attempts &lt; max_attempts:</span><br><span class="line">            attempts += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 过滤出有效的名字列表，排除跳过名单和已经点过的名字</span></span><br><span class="line">            available_names = [name <span class="keyword">for</span> name <span class="keyword">in</span> self.names <span class="keyword">if</span> name <span class="keyword">not</span> <span class="keyword">in</span> self.named]</span><br><span class="line">            <span class="keyword">if</span> self.skip_names <span class="keyword">in</span> available_names <span class="keyword">and</span> random.random() &lt; <span class="number">0.5</span>:</span><br><span class="line">                available_names.remove(self.skip_names)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果没有可选名字，则直接返回 &quot;无可选名字&quot;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> available_names:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;无可选名字，请重启应用后重试&quot;</span></span><br><span class="line"></span><br><span class="line">            final_name = random.choice(available_names)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果选中的名字不在最近20次内，则返回这个名字</span></span><br><span class="line">            <span class="keyword">if</span> final_name <span class="keyword">not</span> <span class="keyword">in</span> self.named:</span><br><span class="line">                <span class="keyword">return</span> final_name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果达到最大尝试次数，返回最后选中的名字以避免死循环</span></span><br><span class="line">        <span class="keyword">return</span> final_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    app = NamePicker(root)</span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;要实现的功能&quot;&gt;&lt;a href=&quot;#要实现的功能&quot; class=&quot;headerlink&quot; title=&quot;要实现的功能&quot;&gt;&lt;/a&gt;要实现的功能&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;随机点名&lt;/li&gt;
&lt;li&gt;在一定数量范围内不会重复点到同一个人&lt;/li&gt;
&lt;li&gt;便于操作的图形化界面</summary>
    
    
    
    <category term="软件开发" scheme="https://blog.luthr.ee/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Python" scheme="https://blog.luthr.ee/tags/Python/"/>
    
    <category term="工具" scheme="https://blog.luthr.ee/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>你好，世界！</title>
    <link href="https://blog.luthr.ee/posts/hello-world/"/>
    <id>https://blog.luthr.ee/posts/hello-world/</id>
    <published>2025-05-23T16:00:00.000Z</published>
    <updated>2025-05-24T08:01:49.812Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到luthree’s Blog</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到luthree’s Blog&lt;/p&gt;
</summary>
      
    
    
    
    <category term="开始" scheme="https://blog.luthr.ee/categories/%E5%BC%80%E5%A7%8B/"/>
    
    
    <category term="欢迎" scheme="https://blog.luthr.ee/tags/%E6%AC%A2%E8%BF%8E/"/>
    
  </entry>
  
</feed>
